
@{
    ViewData["Title"] = "Spots";
    @using APIdemo.Models.ViewModel;
    PaginationVM pgParam = new PaginationVM();
    pgParam.itemNo = 10;
}

<h1>台北市景點</h1>

<div class="row mb-3" style="width: 100%">
    <div class="col-3" style="width: 150px">
        <select class="form-control" style="font-size: 14px; height: 35px" id="itemNo"
                name="itemNo" onchange="change3(this.selectedIndex)">
           @*  <option value=" ">Items per Page:</option> *@
            <option value="10">
                每頁 10 筆資料 
            </option>
            <option value="20">
                每頁 20 筆資料 
            </option>
            <option value="30">
                每頁 30 筆資料 
            </option>
            <option value="40">
                每頁 40 筆資料 
            </option>
        </select>
    </div>
    <div class="col-6" style="width: auto">
        <nav>
            <ul class="pagination" id="ul1">
            </ul>
        </nav>
    </div>
    <div class="col-6" id="divRight">
        <div class="col-6" id="divSequence" style="font-size: 14px; padding-top: 0px; width: 160px;">
                <select title="Select Order" class="form-control"
                        style="font-size: 14px; height: 35px" id="sequence" name="sequence"
                        onchange="change2(this.selectedIndex)">
                @*     <option value=" ">Select Order:</option> *@
                    <option value="asc">
                        依景點編號升冪排列 
                    </option>
                    <option value="desc">
                        依景點編號降冪排列 
                    </option>
                </select>
        </div>
        <div class="col-3" id="divSearch" style="width: 300px; margin-left: 5px">
            <input type="search" placeholder="搜尋景點資料" class="form-control" id="keywordSearch" />
        </div>
    </div>
</div>
<div class="card-group" id="div1" style="width:100%;">
    <div class="card" id="card" style="display:nono">
        <img src="" class="card-img-top" alt="">
        <div class="card-body">
            <h7 class="card-title"></h7>
            <p class="card-text"></p>
        </div>
        <div class="card-footer">
            <small class="text-muted"></small>
        </div>
    </div>
 </div>
@* <div class="row row-cols-1 row-cols-md-3 g-4" id="div1"> *@
@* <div class="card-group" id="div1"> *@
@* </div> *@

@section Styles {
    <style>
        .card {
            min-width: 250px;
            max-width: 250px;
            display: flex;
            flex-wrap: wrap;
        }

        #divRight{
            margin: 0 auto;
            width: 100px;
            display: block;
            display: inline-flex;
            white-space: nowrap;
            text-align: right;
        }

    </style>
}

@section Scripts {
<script>
        const keywordSearch = document.querySelector('#keywordSearch');
        const ulPaging = document.querySelector('#ul1');
        let cardObj = document.getElementById("card");
        const divSpots = document.querySelector('#div1');
        const sequence = document.querySelector('#sequence');
        const itemNo = document.querySelector('#itemNo');

    var searchData = {
        "categoryId": 0,
        "keyword": "公園",
        "page":1,
        "pageSize": 10,
        "sortBy":"SpotId",
        "sortType":"asc"
    };

        function change2() {
            var selectedOption = sequence.options[sequence.selectedIndex];
            const vi2 = selectedOption.value;
            //console.log(vi3);
            searchData.sortType = vi2;
            loadSpots();
        }

        function change3() {
            var selectedOption = itemNo.options[itemNo.selectedIndex];
            const vi3 = selectedOption.value;
            //console.log(vi3);
            searchData.pageSize = vi3;
            searchData.page = 1;
            loadSpots();
        }

        const pagingHandler = page => {
            searchData.page = page;
            loadSpots();
        }

            const loadSpots = async () => {
                divSpots.innerHTML = '';
                const url = 'https://localhost:7085/API/Spots';

                const response = await fetch(url, {
                    method: 'POST',
                    body: JSON.stringify(searchData),
                    headers: {
                        'Content-Type':'application/json'
                    }
                });
                const data = await response.json();
                console.log(data);

                // 也可使用作業一的作法：
                for (let i = 0, max = data.spotsResult.length; i < max; i++) {
                    cardObj.querySelector('.card-img-top').src = data.spotsResult[i].spotImage;
                    cardObj.querySelector('.card-img-top').alt = data.spotsResult[i].spotTitle;
                    cardObj.querySelectorAll('h7').item(0).innerText = data.spotsResult[i].spotId + data.spotsResult[i].spotTitle;
                    cardObj.querySelectorAll('p').item(0).innerText = data.spotsResult[i].spotDescription.length <= 100 ? data.spotsResult[i].spotDescription : data.spotsResult[i].spotDescription.substring(0, 100);
                    cardObj.querySelector('.card-footer').innerText = data.spotsResult[i].openTime == '' ? data.spotsResult[i].address : data.spotsResult[i].openTime + ' \n/ ' + data.spotsResult[i].address;

                    let objClone = cardObj.cloneNode(true);
                    divSpots.appendChild(objClone);
                }
                

                //const spots = data.spotsResult.map(spot => {
                //    const { spotId, spotTitle, spotDescription, address, spotImage } = spot;
                //    // cardObj.querySelector('.card-img-top').src = spotImage;
                //    // cardObj.querySelectorAll('h7').item(0).innerText = spotTitle;
                //    // cardObj.querySelectorAll('p').item(0).innerText = spotDescription.length <= 100 ? spotDescription : spotDescription.substring(0, 100);
                //    // cardObj.querySelector('.card-footer').innerText = address;
                //    // let objClone = cardObj.cloneNode(true);
                //    // cardObj.parentNode.append(objClone);
                //    return (`
                //                                        
                //                           <div class="card">
                //                               <img src="${spotImage}" class="card-img-top" alt="${spotTitle}">
                //                       <div class="card-body">
                //                                           <h5 class="card-title">${spotId} ${spotTitle}</h5>
                //                                                   <p class="card-text">${spotDescription.length <= 100 ? spotDescription : spotDescription.substring(0, 100)}</p>
                //                       </div>
                //                       <div class="card-footer">
                //                                           <small class="text-body-secondary">${address}</small>
                //                       </div>
                //                   </div>
                //                    
                //    
                //                          `)
                //    // return (
                //    //     cardObj.innerHTML
                //    // )
                //})
                //divSpots.innerHTML = spots.join("");



                //顯示分頁按鈕
                let liPages = "";
                for (let i = 1, max = data.totalPages; i <= max; i++) {
                var currentPage = i == searchData.page ? `<i><strong>${i}</strong></i>` : i;
                liPages += `<li class="page-item" onclick="pagingHandler(${i})"><a class="page-link">${currentPage}</a></li>`
                }
                ulPaging.innerHTML = liPages;

            }

            loadSpots();

            keywordSearch.addEventListener('keydown', event => {
                if (event.keyCode === 13) {
                    searchData.keyword = event.target.value;
                    loadSpots();
                }
            })
     </script>
}